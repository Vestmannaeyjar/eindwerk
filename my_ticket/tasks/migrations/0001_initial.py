# Generated by Django 5.2 on 2025-04-21 09:46

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contacts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Context',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('day', 'Dag'), ('week', 'Week'), ('month', 'Maand'), ('year', 'Jaar')], max_length=50), blank=True, default=list, size=None)),
                ('weekday', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Monday', 'maandag'), ('Tuesday', 'dinsdag'), ('Wednesday', 'woensdag'), ('Thursday', 'donderdag'), ('Friday', 'vrijdag'), ('Saturday', 'zaterdag'), ('Sunday', 'zondag')], max_length=50), blank=True, default=list, size=None)),
                ('month', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('January', 'januari'), ('February', 'februari'), ('March', 'maart'), ('April', 'april'), ('May', 'mei'), ('June', 'juni'), ('July', 'juli'), ('August', 'augustus'), ('September', 'september'), ('October', 'oktober'), ('November', 'november'), ('December', 'december')], max_length=50), blank=True, default=list, size=None)),
                ('cycle_distance', models.IntegerField()),
                ('days_of_level', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, size=None)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('date', models.DateTimeField()),
                ('digital_space', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='MeetingAcceptance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='MeetingRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('capacity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('startdate', models.DateField()),
                ('enddate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingContextContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contextcontact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.contextcontact')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.meeting')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.meetingacceptance')),
            ],
        ),
        migrations.AddField(
            model_name='meeting',
            name='contacts',
            field=models.ManyToManyField(through='tasks.MeetingContextContact', to='contacts.contextcontact'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='meetingroom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.meetingroom'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(max_length=255)),
                ('execution_startdate', models.DateField()),
                ('execution_starttime', models.TimeField()),
                ('execution_enddate', models.DateField()),
                ('execution_endtime', models.TimeField()),
                ('full_days', models.BooleanField()),
                ('duration_registered', models.TimeField()),
                ('duration_projected_internal', models.TimeField()),
                ('duration_projected_external', models.TimeField()),
                ('deadline', models.DateTimeField()),
                ('attachment', models.FileField(upload_to='')),
                ('git_branch', models.CharField(max_length=255)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.action')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.contextcontact')),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.context')),
                ('cycle_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.cycle')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.address')),
                ('meetings', models.ManyToManyField(related_name='tasks', to='tasks.meeting')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subtasks', to='tasks.task')),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='unlocks', to='tasks.task')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.project')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.state')),
                ('tags', models.ManyToManyField(related_name='tasks', to='tasks.tag')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.type')),
            ],
        ),
    ]
